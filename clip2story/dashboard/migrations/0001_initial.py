# Generated by Django 4.2.3 on 2023-07-13 02:44

import dashboard.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalConfig',
            fields=[
                ('config_id', models.AutoField(primary_key=True, serialize=False)),
                ('openai_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('trint_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('url_timeout_val', models.IntegerField(default=1440, help_text='How long before generated signed-urls expire in minutes')),
                ('bucket_name', models.CharField(blank=True, help_text='Name of the Google Cloud Platform bucket that the videos will be uploaded to', null=True)),
                ('age_to_delete', models.IntegerField(default=14, help_text='How many days after creating a recording will it be deleted automatically')),
                ('recent_transcript_limit', models.IntegerField(default=30, help_text='How many recent transcripts to grab from Trint for the import video page')),
                ('help_messages_html', models.TextField(blank=True, help_text='HTML help text for login and help page', null=True)),
                ('tag_prompt', models.TextField(blank=True, help_text='GPT Prompt for generating tags from summaries. Do not specify in your prompt how to format the tags.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Prompt',
            fields=[
                ('prompt_type', models.TextField(max_length=255, primary_key=True, serialize=False)),
                ('prompt_text', models.TextField(help_text='500 word limit for prompts.', validators=[dashboard.models.Prompt.validate_word_limit])),
            ],
        ),
        migrations.CreateModel(
            name='Recording',
            fields=[
                ('recording_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('uploaded_dt', models.DateTimeField(auto_now_add=True, verbose_name='date uploaded')),
                ('upload_filename', models.CharField(blank=True, max_length=255, null=True)),
                ('upload_filetype', models.CharField(blank=True, max_length=255, null=True)),
                ('thumbnail_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('status_text', models.CharField(max_length=255)),
                ('status_state', models.IntegerField(default=0)),
                ('transcript_vendor_id', models.CharField(blank=True, max_length=255, null=True)),
                ('transcript', models.TextField(blank=True, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, null=True)),
                ('transcript_url', models.URLField(blank=True, null=True)),
                ('summary_url', models.URLField(blank=True, null=True)),
                ('age', models.DateField(auto_now_add=True)),
                ('hold_indefinitely', models.BooleanField(default=False)),
                ('imported', models.BooleanField(default=False)),
                ('prompt_key', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.prompt')),
                ('summary_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='summary_by_user', to=settings.AUTH_USER_MODEL)),
                ('uploaded_by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_by_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
